!function(){"use strict";var t=function(){var t=function(t){var e="http://localhost:3000/data/matches.json",a=new XMLHttpRequest;if(a.open("GET",e,!1),a.send(null),200==a.status){for(var r=JSON.parse(a.responseText),n=[],s=[],l=0;l<r.length;l++){var h={user:r[l].user,matches:r[l].matches};n.push(h)}for(var o=0;o<n.length;o++){var c=n[o].user.indexOf(t);0===c&&s.push(n[o].matches)}var u=s[0];return u}};return{getMatches:t}};angular.module("app").factory("matchesService",[t])}(),function(){"use strict";var t=function(t,e){t.showMatches=function(){var a="Luna",r=e.getMatches(a);t.aantalMatches=r.length,t.arrMatches=r;for(var n="",s=0;s<r.length;s++)n=r[s].interests.toString().replace(" ,"," "),r[s].interests=n}};angular.module("app").controller("MatchesController",["$scope","matchesService",t])}(),function(){var t=angular.module("app",["ngRoute"]);t.config(function(t){t.when("/",{templateUrl:"./partials/home.html"}).when("/signup",{templateUrl:"partials/signup.html"}).when("/home",{templateUrl:"./partials/home.html"}).when("/matches",{templateUrl:"./partials/matches.html"}).when("/howto",{templateUrl:"./partials/howTo.html"})})}();
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1hdGNoZXNTZXJ2aWNlLmpzIiwiTWF0Y2hlc0NvbnRyb2xsZXIuanMiLCJhcHAuanMiXSwibmFtZXMiOlsibWF0Y2hlc1NlcnZpY2UiLCJnZXRNYXRjaGVzIiwibmFtZVVzZXIiLCJsb2NhbFVybCIsInhtbEh0dHAiLCJYTUxIdHRwUmVxdWVzdCIsIm9wZW4iLCJzZW5kIiwic3RhdHVzIiwiZGF0YSIsIkpTT04iLCJwYXJzZSIsInJlc3BvbnNlVGV4dCIsImFyciIsImFyck1hdGNoZXMiLCJpIiwibGVuZ3RoIiwib2JqIiwidXNlciIsIm1hdGNoZXMiLCJwdXNoIiwiaWkiLCJpbmRleCIsImluZGV4T2YiLCJhcnJNYXRjaGVzQnlVc2VyIiwiYW5ndWxhciIsIm1vZHVsZSIsImZhY3RvcnkiLCJNYXRjaGVzQ29udHJvbGxlciIsIiRzY29wZSIsInNob3dNYXRjaGVzIiwiYWFudGFsTWF0Y2hlcyIsInRleHQiLCJpbnRlcmVzdHMiLCJ0b1N0cmluZyIsInJlcGxhY2UiLCJjb250cm9sbGVyIiwiYXBwIiwiY29uZmlnIiwiJHJvdXRlUHJvdmlkZXIiLCJ3aGVuIiwidGVtcGxhdGVVcmwiXSwibWFwcGluZ3MiOiJDQUdBLFdBRUEsWUFFQSxJQUFBQSxHQUFBLFdBRUEsR0FBQUMsR0FBQSxTQUFBQyxHQUVBLEdBQ0FDLEdBQUEsMENBQ0FDLEVBQUEsR0FBQUMsZUFJQSxJQUhBRCxFQUFBRSxLQUFBLE1BQUFILEdBQUEsR0FDQUMsRUFBQUcsS0FBQSxNQUVBLEtBQUFILEVBQUFJLE9BQUEsQ0FRQSxJQUFBLEdBTkFDLEdBQUFDLEtBQUFDLE1BQUFQLEVBQUFRLGNBQ0FDLEtBQ0FDLEtBSUFDLEVBQUEsRUFBQUEsRUFBQU4sRUFBQU8sT0FBQUQsSUFBQSxDQUVBLEdBQUFFLElBQ0FDLEtBQUFULEVBQUFNLEdBQUFHLEtBQ0FDLFFBQUFWLEVBQUFNLEdBQUFJLFFBR0FOLEdBQUFPLEtBQUFILEdBSUEsSUFBQSxHQUFBSSxHQUFBLEVBQUFBLEVBQUFSLEVBQUFHLE9BQUFLLElBQUEsQ0FFQSxHQUFBQyxHQUFBVCxFQUFBUSxHQUFBSCxLQUFBSyxRQUFBckIsRUFDQSxLQUFBb0IsR0FDQVIsRUFBQU0sS0FBQVAsRUFBQVEsR0FBQUYsU0FTQSxHQUFBSyxHQUFBVixFQUFBLEVBR0EsT0FBQVUsSUEwQkEsUUFFQXZCLFdBQUFBLEdBTUF3QixTQUFBQyxPQUFBLE9BQUFDLFFBQUEsa0JBQUEzQixPQ2xGQSxXQUVBLFlBRUEsSUFBQTRCLEdBQUEsU0FBQUMsRUFBQTdCLEdBRUE2QixFQUFBQyxZQUFBLFdBRUEsR0FBQTVCLEdBQUEsT0FFQXNCLEVBQUF4QixFQUFBQyxXQUFBQyxFQUVBMkIsR0FBQUUsY0FBQVAsRUFBQVIsT0FFQWEsRUFBQWYsV0FBQVUsQ0FHQSxLQUFBLEdBREFRLEdBQUEsR0FDQWpCLEVBQUEsRUFBQUEsRUFBQVMsRUFBQVIsT0FBQUQsSUFDQWlCLEVBQUFSLEVBQUFULEdBQUFrQixVQUFBQyxXQUFBQyxRQUFBLEtBQUEsS0FDQVgsRUFBQVQsR0FBQWtCLFVBQUFELEdBTUFQLFNBQUFDLE9BQUEsT0FBQVUsV0FBQSxxQkFBQSxTQUFBLGlCQUFBUixPQ3pCQSxXQUNBLEdBQUFTLEdBQUFaLFFBQUFDLE9BQUEsT0FBQSxXQUNBVyxHQUFBQyxPQUFBLFNBQUFDLEdBQ0FBLEVBQ0FDLEtBQUEsS0FDQUMsWUFBQSx5QkFFQUQsS0FBQSxXQUNBQyxZQUFBLHlCQUVBRCxLQUFBLFNBQ0FDLFlBQUEseUJBRUFELEtBQUEsWUFDQUMsWUFBQSw0QkFFQUQsS0FBQSxVQUNBQyxZQUFBIiwiZmlsZSI6ImFwcC5taW4uanMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIENyZWF0ZWQgYnkgaW1hbiBvbiA1LzEyLzE1LlxuICovXG4oZnVuY3Rpb24oKXtcblxuICAgIFwidXNlIHN0cmljdFwiO1xuXG4gICAgdmFyIG1hdGNoZXNTZXJ2aWNlID0gZnVuY3Rpb24gKCkge1xuXG4gICAgICAgIHZhciBnZXRNYXRjaGVzID0gZnVuY3Rpb24gKG5hbWVVc2VyKSB7XG5cbiAgICAgICAgICAgIHZhciB2YXJpYWJlbFVSTCA9IFwidG9nZXRoZXJcIjtcbiAgICAgICAgICAgIHZhciBsb2NhbFVybCA9IFwiaHR0cDovL2xvY2FsaG9zdDozMDAwL2RhdGEvbWF0Y2hlcy5qc29uXCI7XG4gICAgICAgICAgICB2YXIgeG1sSHR0cCA9IG5ldyBYTUxIdHRwUmVxdWVzdCgpO1xuICAgICAgICAgICAgeG1sSHR0cC5vcGVuKFwiR0VUXCIsIGxvY2FsVXJsLCBmYWxzZSk7XG4gICAgICAgICAgICB4bWxIdHRwLnNlbmQobnVsbCk7XG5cbiAgICAgICAgICAgIGlmKHhtbEh0dHAuc3RhdHVzID09IDIwMCkge1xuXG4gICAgICAgICAgICAgICAgdmFyIGRhdGEgPSBKU09OLnBhcnNlKHhtbEh0dHAucmVzcG9uc2VUZXh0KTtcbiAgICAgICAgICAgICAgICB2YXIgYXJyID0gW107XG4gICAgICAgICAgICAgICAgdmFyIGFyck1hdGNoZXMgPSBbXTtcbiAgICAgICAgICAgICAgICB2YXIgYXJyTWF0Y2hVc2VycyA9IFtdO1xuICAgICAgICAgICAgICAgIHZhciBhcnJNYXRjaEludGVyZXN0cyA9IFtdO1xuXG4gICAgICAgICAgICAgICAgZm9yKHZhciBpPTA7IGkgPCBkYXRhLmxlbmd0aDsgaSsrKXtcblxuICAgICAgICAgICAgICAgICAgICB2YXIgb2JqID0ge1xuICAgICAgICAgICAgICAgICAgICAgICAgXCJ1c2VyXCI6IGRhdGFbaV0udXNlcixcbiAgICAgICAgICAgICAgICAgICAgICAgIFwibWF0Y2hlc1wiOmRhdGFbaV0ubWF0Y2hlc1xuICAgICAgICAgICAgICAgICAgICB9O1xuXG4gICAgICAgICAgICAgICAgICAgIGFyci5wdXNoKG9iaik7XG5cbiAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICBmb3IodmFyIGlpID0gMDsgaWk8YXJyLmxlbmd0aDsgaWkrKyl7XG5cbiAgICAgICAgICAgICAgICAgICAgdmFyIGluZGV4ID0gYXJyW2lpXS51c2VyLmluZGV4T2YobmFtZVVzZXIpO1xuICAgICAgICAgICAgICAgICAgICBpZihpbmRleCA9PT0gMCl7XG4gICAgICAgICAgICAgICAgICAgICAgICBhcnJNYXRjaGVzLnB1c2goYXJyW2lpXS5tYXRjaGVzKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAvL2NvbnNvbGUubG9nKFwiSW5kZXg6IFwiK2luZGV4KTtcbiAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICAvL2NvbnNvbGUubG9nKGFycik7XG4gICAgICAgICAgICAgICAgLy9jb25zb2xlLmxvZyhhcnJNYXRjaGVzWzBdKTtcblxuXG4gICAgICAgICAgICAgICAgdmFyIGFyck1hdGNoZXNCeVVzZXIgPSBhcnJNYXRjaGVzWzBdO1xuICAgICAgICAgICAgICAgIC8vY29uc29sZS5sb2coXCJBYW50YWwgbWF0Y2hlczogXCIgKyBhcnJNYXRjaGVzQnlVc2VyLmxlbmd0aCk7XG5cbiAgICAgICAgICAgICAgICByZXR1cm4gYXJyTWF0Y2hlc0J5VXNlcjtcblxuICAgICAgICAgICAgICAgIC8qXG4gICAgICAgICAgICAgICAgZm9yKHZhciBpaWkgPSAwOyBpaWk8YXJyTWF0Y2hlc1swXS5sZW5ndGg7IGlpaSsrKXtcblxuICAgICAgICAgICAgICAgICAgICB2YXIgbWF0Y2hVc2VyID0gYXJyTWF0Y2hlc1swXVtpaWldLnVzZXI7XG4gICAgICAgICAgICAgICAgICAgIHZhciBtYXRjaEludGVyZXN0cyA9IGFyck1hdGNoZXNbMF1baWlpXS5pbnRlcmVzdHM7XG5cbiAgICAgICAgICAgICAgICAgICAgYXJyTWF0Y2hVc2Vycy5wdXNoKG1hdGNoVXNlcik7XG4gICAgICAgICAgICAgICAgICAgIGFyck1hdGNoSW50ZXJlc3RzLnB1c2gobWF0Y2hJbnRlcmVzdHMpO1xuXG4gICAgICAgICAgICAgICAgICAgIC8vY29uc29sZS5sb2cobWF0Y2hVc2VyKTtcbiAgICAgICAgICAgICAgICAgICAgLy9jb25zb2xlLmxvZyhtYXRjaEludGVyZXN0cyk7XG4gICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgY29uc29sZS5sb2coYXJyTWF0Y2hVc2Vycyk7XG4gICAgICAgICAgICAgICAgY29uc29sZS5sb2coYXJyTWF0Y2hJbnRlcmVzdHMpO1xuICAgICAgICAgICAgICAgICovXG5cbiAgICAgICAgICAgIH1cblxuXG5cbiAgICAgICAgfTtcblxuICAgICAgICAvL3B1YmxpYyBnZWRlZWx0ZVxuICAgICAgICByZXR1cm57XG5cbiAgICAgICAgICAgIGdldE1hdGNoZXM6Z2V0TWF0Y2hlcyxcblxuICAgICAgICB9O1xuXG4gICAgfTtcblxuICAgIGFuZ3VsYXIubW9kdWxlKFwiYXBwXCIpLmZhY3RvcnkoXCJtYXRjaGVzU2VydmljZVwiLCBbbWF0Y2hlc1NlcnZpY2VdKTtcbiAgICAvLyAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBeIGRlemUgbmFhbSBiZXBhYWx0IHdlbGtlIG5hYW0gamUgbm9kaWcgaGVidCBpbiBqZSBjb250cm9sbGVyIGFscyB2ZXJ3aWp6aW5nIVxuXG59KSgpOyIsIi8qKlxuICogQ3JlYXRlZCBieSBpbWFuIG9uIDUvMTIvMTUuXG4gKi9cblxuKGZ1bmN0aW9uKCl7XG5cbiAgICBcInVzZSBzdHJpY3RcIjtcblxuICAgIHZhciBNYXRjaGVzQ29udHJvbGxlciA9IGZ1bmN0aW9uKCRzY29wZSwgbWF0Y2hlc1NlcnZpY2UpIHtcblxuICAgICAgICAkc2NvcGUuc2hvd01hdGNoZXMgPSBmdW5jdGlvbigpe1xuXG4gICAgICAgICAgICB2YXIgbmFtZVVzZXIgPSBcIkx1bmFcIjtcblxuICAgICAgICAgICAgdmFyIGFyck1hdGNoZXNCeVVzZXIgPSBtYXRjaGVzU2VydmljZS5nZXRNYXRjaGVzKG5hbWVVc2VyKTtcblxuICAgICAgICAgICAgJHNjb3BlLmFhbnRhbE1hdGNoZXMgPSBhcnJNYXRjaGVzQnlVc2VyLmxlbmd0aDtcblxuICAgICAgICAgICAgJHNjb3BlLmFyck1hdGNoZXMgPSBhcnJNYXRjaGVzQnlVc2VyO1xuXG4gICAgICAgICAgICB2YXIgdGV4dCA9IFwiXCI7XG4gICAgICAgICAgICBmb3IodmFyIGk9MDsgaTxhcnJNYXRjaGVzQnlVc2VyLmxlbmd0aDsgaSsrKXtcbiAgICAgICAgICAgICAgICB0ZXh0ID0gYXJyTWF0Y2hlc0J5VXNlcltpXS5pbnRlcmVzdHMudG9TdHJpbmcoKS5yZXBsYWNlKFwiICxcIiwgXCIgXCIpO1xuICAgICAgICAgICAgICAgIGFyck1hdGNoZXNCeVVzZXJbaV0uaW50ZXJlc3RzID0gdGV4dDtcbiAgICAgICAgICAgIH1cblxuICAgICAgICB9O1xuICAgIH07XG5cbiAgICBhbmd1bGFyLm1vZHVsZShcImFwcFwiKS5jb250cm9sbGVyKFwiTWF0Y2hlc0NvbnRyb2xsZXJcIiwgW1wiJHNjb3BlXCIsIFwibWF0Y2hlc1NlcnZpY2VcIiwgTWF0Y2hlc0NvbnRyb2xsZXJdKTtcblxufSkoKTsiLCIvKipcbiAqIENyZWF0ZWQgYnkgTWFydGhlIG9uIDEwLzEyLzE1LlxuICovXG5cbihmdW5jdGlvbigpe1xuICAgIHZhciBhcHAgPSBhbmd1bGFyLm1vZHVsZShcImFwcFwiLCBbXCJuZ1JvdXRlXCJdKTtcbiAgICBhcHAuY29uZmlnKGZ1bmN0aW9uKCRyb3V0ZVByb3ZpZGVyKXtcbiAgICAgICAgJHJvdXRlUHJvdmlkZXJcbiAgICAgICAgICAgIC53aGVuKFwiL1wiLHtcbiAgICAgICAgICAgICAgICB0ZW1wbGF0ZVVybDogXCIuL3BhcnRpYWxzL2hvbWUuaHRtbFwiXG4gICAgICAgICAgICB9KVxuICAgICAgICAgICAgLndoZW4oXCIvc2lnbnVwXCIse1xuICAgICAgICAgICAgICAgIHRlbXBsYXRlVXJsOiBcInBhcnRpYWxzL3NpZ251cC5odG1sXCJcbiAgICAgICAgICAgIH0pXG4gICAgICAgICAgICAud2hlbihcIi9ob21lXCIse1xuICAgICAgICAgICAgICAgIHRlbXBsYXRlVXJsOiBcIi4vcGFydGlhbHMvaG9tZS5odG1sXCJcbiAgICAgICAgICAgIH0pXG4gICAgICAgICAgICAud2hlbihcIi9tYXRjaGVzXCIse1xuICAgICAgICAgICAgICAgIHRlbXBsYXRlVXJsOiBcIi4vcGFydGlhbHMvbWF0Y2hlcy5odG1sXCJcbiAgICAgICAgICAgIH0pXG4gICAgICAgICAgICAud2hlbihcIi9ob3d0b1wiLHtcbiAgICAgICAgICAgICAgICB0ZW1wbGF0ZVVybDogXCIuL3BhcnRpYWxzL2hvd1RvLmh0bWxcIlxuICAgICAgICAgICAgfSlcblxuICAgIH0pXG59KSgpOyJdLCJzb3VyY2VSb290IjoiL3NvdXJjZS8ifQ==
