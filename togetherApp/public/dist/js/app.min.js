/**
 * Created by Marthe on 10/12/15.
 */

(function(){
    var app = angular.module("app", ["ngRoute"]);
    app.config(function($routeProvider){
        $routeProvider
            .when("/",{
                templateUrl: "./views/home.html"
            })
            .when("/signup",{
                templateUrl: "views/signup.html"
            })
            .when("/home",{
                templateUrl: "./views/home.html"
            })
            .when("/matches",{
                templateUrl: "./views/matches.html"
            })
            .when("/howto",{
                templateUrl: "./views/howTo.html"
            })
            .when("/activities",{
                templateUrl: "./views/activities.html"
            })
            .when("/admin",{
                templateUrl: "./views/admin.html"
            })
            .when("/searchprofiles",{
                templateUrl: "./views/searchProfiles.html"
            })
            .when("/myprofile",{
                templateUrl: "./views/myProfile.html"
            });

    });
    app.directive('ngEnter', function () {
        return function (scope, element, attrs) {
            element.bind("keydown keypress", function (event) {
                if (event.which === 13) {
                    scope.$apply(function () {
                        scope.$eval(attrs.ngEnter);
                    });

                    event.preventDefault();
                }
            });
        };
    });

    app.directive('editableCheckbox', function () {
        return {
            restrict: 'E',
            templateUrl: './views/editablecheckbox.html'
        };
    });
})();
/**
 * Created by iman on 15/12/15.
 */
var Activity = function(img, name, place, keywords, participants, myEvent){
    this.img = img;
    this.name = name;
    this.place = place;
    this.keywords = keywords;
    this.participants = participants;
    this.myEvent = myEvent;
};
/**
 * Created by iman on 5/12/15.
 */
(function(){

    "use strict";

    var activitiesService = function () {

        var getActivities = function () {

            var localUrl = "http://localhost:3000/data/activities.json";
            var xmlHttp = new XMLHttpRequest();
            xmlHttp.open("GET", localUrl, false);
            xmlHttp.send(null);

            if(xmlHttp.status == 200) {

                var data = JSON.parse(xmlHttp.responseText);

                //console.log(data);

                var arrActivities = [];

                for (var i = 0; i < data.length; i++) {

                    var d = data[i];

                    var newActivity = new Activity();
                    newActivity.img = d.img;
                    newActivity.name = d.name;
                    newActivity.place = d.place;
                    newActivity.participants = d.participants;
                    newActivity.myEvent = d.myEvent;

                    var text = "";

                    for(var ii=0; ii< d.keywords.length; ii++){
                        if(ii == d.keywords.length-1){
                            text += d.keywords[ii];
                        }
                        else{
                            text += d.keywords[ii];
                            text += ", ";
                        }
                    }

                    newActivity.keywords = text;
                    arrActivities.push(newActivity);
                }

                return arrActivities;

            }

        };

        //public gedeelte
        return{

            getActivities:getActivities

        };

    };

    angular.module("app").factory("activitiesService", [activitiesService]);
    //                                  ^ deze naam bepaalt welke naam je nodig hebt in je controller als verwijzing!

})();
/**
 * Created by iman on 15/12/15.
 */

(function(){

    "use strict";

    var dbService = function ($http) {

        var getCollection = function (collection) {


            var url = "http://localhost:3000/api/" + collection;
            return $http.get(url).then(function(response){

                //console.log(response);
                return response.data;

            });

        };

        var getByID = function (collection, id) {


            var url = "http://localhost:3000/api/" + collection + "/" + id;
            return $http.get(url).then(function(response){

                //console.log(response);
                return response.data;

            });

        };

        var getItem = function(item){

            var url = "http://localhost:3000/api/" + item;
            return $http.get('/user').then(function(response){

                return response.data;

            });

        };

        //public gedeelte
        return{

            getCollection:getCollection,
            getByID:getByID,
            getItem:getItem

        };

    };

    angular.module("app").factory("dbService", ["$http", dbService]);
    //                                  ^ deze naam bepaalt welke naam je nodig hebt in je controller als verwijzing!

})();
/**
 * Created by iman on 5/12/15.
 */
(function(){

    "use strict";

    var matchesService = function () {

        var getMatches = function (nameUser) {

            var variabelURL = "together";
            var localUrl = "http://localhost:3000/data/matches.json";
            var xmlHttp = new XMLHttpRequest();
            xmlHttp.open("GET", localUrl, false);
            xmlHttp.send(null);

            if(xmlHttp.status == 200) {

                var data = JSON.parse(xmlHttp.responseText);
                var arr = [];
                var arrMatches = [];
                var arrMatchUsers = [];
                var arrMatchInterests = [];

                for(var i=0; i < data.length; i++){

                    var obj = {
                        "user": data[i].user,
                        "matches":data[i].matches
                    };

                    arr.push(obj);

                }

                for(var ii = 0; ii<arr.length; ii++){

                    var index = arr[ii].user.indexOf(nameUser);
                    if(index === 0){
                        arrMatches.push(arr[ii].matches);
                    }
                    //console.log("Index: "+index);
                }

                //console.log(arr);
                //console.log(arrMatches[0]);


                var arrMatchesByUser = arrMatches[0];
                //console.log("Aantal matches: " + arrMatchesByUser.length);

                return arrMatchesByUser;

                /*
                for(var iii = 0; iii<arrMatches[0].length; iii++){

                    var matchUser = arrMatches[0][iii].user;
                    var matchInterests = arrMatches[0][iii].interests;

                    arrMatchUsers.push(matchUser);
                    arrMatchInterests.push(matchInterests);

                    //console.log(matchUser);
                    //console.log(matchInterests);
                }

                console.log(arrMatchUsers);
                console.log(arrMatchInterests);
                */

            }



        };

        //public gedeelte
        return{

            getMatches:getMatches,

        };

    };

    angular.module("app").factory("matchesService", [matchesService]);
    //                                  ^ deze naam bepaalt welke naam je nodig hebt in je controller als verwijzing!

})();
/**
 * Created by iman on 5/12/15.
 */

(function(){

    "use strict";

    var ActivitiesController = function($scope, dbService) {

        $scope.showActivities = function(){

            $scope.arrActivities = dbService.getCollection('users');

        };


        $scope.addActivity = function() {
            console.log("ADD ACTIVITY");

            var street = this.street;
            var number = this.number;
            var zipcode = this.zipcode;
            var comment = this.comment;
            var dateFrom = this.dateFrom;
            var dateUntil = this.dateUntil;
            var timestamp = new Date().getTime();

            if((street !== undefined) &&
                (number !== undefined) &&
                (zipcode !== undefined) &&
                (comment !== undefined) &&
                (dateFrom !== undefined) &&
                (dateUntil !== undefined) &&
                (timestamp !== undefined)){

                if(dateFrom <= dateUntil){
                    $scope.error = "";

                    $http.post('/addactivity', {
                        address : street + " " + number + " " + zipcode,
                        comment : comment,
                        dateFrom : dateFrom,
                        dateUntil : dateUntil,
                        timestamp : timestamp
                    }).success(function (data) {
                        $scope.error = data.error;
                        $location.path(data.redirect);
                    });

                }
                else if(dateFrom > dateUntil){
                    $scope.error = "ERROR: Date until can't be earlier than date from.";
                }

            }
            else{
                $scope.error = "ERROR: All fields are required.";
            }
        };
    };

    angular.module("app").controller("ActivitiesController", ["$scope", "dbService", ActivitiesController]);

})();
/**
 * Created by iman on 5/12/15.
 */

(function(){

    "use strict";

    var MatchesController = function($scope, matchesService) {

        $scope.showMatches = function(){

            var nameUser = "Luna";

            var arrMatchesByUser = matchesService.getMatches(nameUser);

            $scope.aantalMatches = arrMatchesByUser.length;

            $scope.arrMatches = arrMatchesByUser;

            var text = "";
            for(var i=0; i<arrMatchesByUser.length; i++){
                text = arrMatchesByUser[i].interests.toString().replace(" ,", " ");
                arrMatchesByUser[i].interests = text;
            }

        };
    };

    angular.module("app").controller("MatchesController", ["$scope", "matchesService", MatchesController]);

})();
/**
 * Created by iman on 20/12/15.
 */
(function(){

    "use strict";

    var ProfilesController = function($scope, dbService) {

        var clicksOnBtn = 0;

        $scope.showDiv = function(){
            $scope.filter = {showFilter:true};
            clicksOnBtn++;

            if(clicksOnBtn > 1){
                $scope.filter = {showFilter:false};
                clicksOnBtn = 0;
            }
        };

        $scope.hideDiv = function(){
            clicksOnBtn = 0;
            $scope.filter = {showFilter:false};
        };

        $scope.showProfiles = function(){

            dbService.getCollection('users').then(function(response){

                console.log(response);
                $scope.arrProfiles = response.userlist;

            });

        };

        $scope.sortProperty = "title";
        $scope.filterQuery = "";
        $scope.filterImages = function(i){
            if($scope.filterQuery === ""){
                return true;
            }

            /*
             else if(i.username.toLowerCase().indexOf($scope.filterQuery.toLocaleLowerCase()) >= 0){
             return true;
             }
             */

            else if($scope.filterQuery.toLowerCase() == i.username.toLowerCase()){
                return true;
            }

            else if($scope.filterQuery.toLowerCase() === "nofilter"){
                $scope.filterQuery = "";
            }

            return false;
        };
    };

    angular.module("app").controller("ProfilesController", ["$scope", "dbService", ProfilesController]);

})();
/**
 * Created by iman on 20/12/15.
 */
(function(){

    "use strict";

    var UsersController = function($scope, dbService) {

        $scope.getUsers = function(){

            dbService.getCollection('users').then(function(response){

                //console.log(response);
                $scope.arrUsers = response.userlist;

            });

        };

        $scope.getUserByID = function(){

            dbService.getItem('user').then(function(response){

                console.log(response);
                $scope.userProfile = response;

            });

        };
    };

    angular.module("app").controller("UsersController", ["$scope", "dbService", UsersController]);

})();
/**
 * Created by Marthe on 15/12/15.
 */
(function(){
    "use strict";

    var loginController = function ($scope, $http, $location) {

        $scope.login = function() {
            $http
                .post('/login', {
                    username: this.username,
                    password: this.password
                })
                .success(function(data) {
                    console.log(data);
                    $scope.error = data.error;
                    $location.path(data.redirect);
                });
        };

        $scope.register = function() {
            console.log("REGISTER");
            $http.post('/register', {
                /*firstname: this.firstname,
                lastname : this.lastname,
                email : this.email,*/
                username : this.username,
                password : this.password,
                /*birthdate : this.birthdate,
                sex : this.sex,
                zipcode : this.zipcode,
                biography : this.biography*/
            }).success(function (data) {
                $scope.error = data.error;
                $location.path(data.redirect);
            });
        };
    };

    angular.module("app").controller("loginController", ["$scope", "$http", "$location", loginController]);
})();
/**
 * Created by Nikita on 21/12/2015.
 */
(function () {
    "use strict";

    var signupController = function ($scope) {
        $scope.categories = [''];
        $scope.newCategory = "";
        $scope.saveCategory = function () {

        };

    };

    var editableCheckboxController = function ($scope) {
        $scope.category = "";
        $scope.showLabel = false;
        $scope.showTextbox = true;
        $scope.saveCategory = function () {
            if ($scope.category) {
                $scope.showLabel = true;
                $scope.showTextbox = false;
            }
            else {
                $scope.showLabel = false;
                $scope.showTextbox = true;
            }
        };
        $scope.edit = function () {
            $scope.showLabel = false;
            $scope.showTextbox = true;
        };

    };
    angular.module("app")
        .controller("signupController", ["$scope", signupController])
        .controller("editableCheckboxController", ["$scope", editableCheckboxController]);


})();
/**
 * Created by Marthe on 16/12/15.
 */
(function () {
    "use strict";

    var userController = function ( $scope, $http, $location) {
        $http.get('/user').success(function(data) {
            $scope.user = data;

            if(data.username == 'admin'){
                $scope.auth = {isAuth: true, isAdmin : true};
            }
            else if(data.username != 'admin' && data.username !== undefined){
                $scope.auth = {isAuth: true, isAdmin : false};
            }
            else if(data.username === undefined){
                $scope.auth = {isAuth: false, isAdmin : false};

            }


        });

        /*$scope.logout = function() {
            $http.get('/logout').success(function (data) {
                $location.path(data.redirect);
            });
        };*/
    };


    angular.module("app").controller("userController", ["$scope", "$http", "$location", userController]);
})();
//# sourceMappingURL=data:application/json;base64,
