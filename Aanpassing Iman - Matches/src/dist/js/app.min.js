!function(){"use strict";var e=function(){var e=function(e){var t="http://localhost:63342/together/src/data/matches.json",a=new XMLHttpRequest;if(a.open("GET",t,!1),a.send(null),200==a.status){for(var r=JSON.parse(a.responseText),s=[],o=[],h=0;h<r.length;h++){var l={user:r[h].user,matches:r[h].matches};s.push(l)}for(var n=0;n<s.length;n++){var c=s[n].user.indexOf(e);0===c&&o.push(s[n].matches)}console.log(s),console.log(o[0]);var m=o[0];return console.log("Aantal matches: "+m.length),m}};return{getMatches:e}};angular.module("app").factory("matchesService",[e])}(),function(){"use strict";var e=function(e,t){e.showMatches=function(){var a=t.getMatches("Luna");e.aantalMatches=a.length,e.arrMatches=a}};angular.module("app").controller("MatchesController",["$scope","matchesService",e])}(),function(){"use strict";var e=angular.module("app",["ngRoute"]);e.config(function(e){e.when("/search",{templateUrl:"ImagesOverview/search.html"}).when("/details/:id",{templateUrl:"ImagesDetails/details.html"}).when("/home",{templateUrl:"home/home.html"}).when("/howto",{templateUrl:"howTo/howTo.html"}).when("/register",{templateUrl:"profile/register.html"}).when("/matches",{templateUrl:"matches/matches.html"}).otherwise({redirectTo:"/home"})})}();
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1hdGNoZXNTZXJ2aWNlLmpzIiwiTWF0Y2hlc0NvbnRyb2xsZXIuanMiLCJhcHAuanMiXSwibmFtZXMiOlsibWF0Y2hlc1NlcnZpY2UiLCJnZXRNYXRjaGVzIiwibmFtZVVzZXIiLCJsb2NhbFVybCIsInhtbEh0dHAiLCJYTUxIdHRwUmVxdWVzdCIsIm9wZW4iLCJzZW5kIiwic3RhdHVzIiwiZGF0YSIsIkpTT04iLCJwYXJzZSIsInJlc3BvbnNlVGV4dCIsImFyciIsImFyck1hdGNoZXMiLCJpIiwibGVuZ3RoIiwib2JqIiwidXNlciIsIm1hdGNoZXMiLCJwdXNoIiwiaWkiLCJpbmRleCIsImluZGV4T2YiLCJjb25zb2xlIiwibG9nIiwiYXJyTWF0Y2hlc0J5VXNlciIsImFuZ3VsYXIiLCJtb2R1bGUiLCJmYWN0b3J5IiwiTWF0Y2hlc0NvbnRyb2xsZXIiLCIkc2NvcGUiLCJzaG93TWF0Y2hlcyIsImFhbnRhbE1hdGNoZXMiLCJjb250cm9sbGVyIiwiYXBwIiwiY29uZmlnIiwiJHJvdXRlUHJvdmlkZXIiLCJ3aGVuIiwidGVtcGxhdGVVcmwiLCJvdGhlcndpc2UiLCJyZWRpcmVjdFRvIl0sIm1hcHBpbmdzIjoiQ0FHQSxXQUVBLFlBRUEsSUFBQUEsR0FBQSxXQUVBLEdBQUFDLEdBQUEsU0FBQUMsR0FFQSxHQUFBQyxHQUFBLHdEQUNBQyxFQUFBLEdBQUFDLGVBSUEsSUFIQUQsRUFBQUUsS0FBQSxNQUFBSCxHQUFBLEdBQ0FDLEVBQUFHLEtBQUEsTUFFQSxLQUFBSCxFQUFBSSxPQUFBLENBUUEsSUFBQSxHQU5BQyxHQUFBQyxLQUFBQyxNQUFBUCxFQUFBUSxjQUNBQyxLQUNBQyxLQUlBQyxFQUFBLEVBQUFBLEVBQUFOLEVBQUFPLE9BQUFELElBQUEsQ0FFQSxHQUFBRSxJQUNBQyxLQUFBVCxFQUFBTSxHQUFBRyxLQUNBQyxRQUFBVixFQUFBTSxHQUFBSSxRQUdBTixHQUFBTyxLQUFBSCxHQUlBLElBQUEsR0FBQUksR0FBQSxFQUFBQSxFQUFBUixFQUFBRyxPQUFBSyxJQUFBLENBRUEsR0FBQUMsR0FBQVQsRUFBQVEsR0FBQUgsS0FBQUssUUFBQXJCLEVBQ0EsS0FBQW9CLEdBQ0FSLEVBQUFNLEtBQUFQLEVBQUFRLEdBQUFGLFNBS0FLLFFBQUFDLElBQUFaLEdBQ0FXLFFBQUFDLElBQUFYLEVBQUEsR0FHQSxJQUFBWSxHQUFBWixFQUFBLEVBR0EsT0FGQVUsU0FBQUMsSUFBQSxtQkFBQUMsRUFBQVYsUUFFQVUsR0F3QkEsUUFFQXpCLFdBQUFBLEdBTUEwQixTQUFBQyxPQUFBLE9BQUFDLFFBQUEsa0JBQUE3QixPQy9FQSxXQUVBLFlBRUEsSUFBQThCLEdBQUEsU0FBQUMsRUFBQS9CLEdBRUErQixFQUFBQyxZQUFBLFdBRUEsR0FBQU4sR0FBQTFCLEVBQUFDLFdBQUEsT0FFQThCLEdBQUFFLGNBQUFQLEVBQUFWLE9BRUFlLEVBQUFqQixXQUFBWSxHQUtBQyxTQUFBQyxPQUFBLE9BQUFNLFdBQUEscUJBQUEsU0FBQSxpQkFBQUosT0NsQkEsV0FDQSxZQUVBLElBQUFLLEdBQUFSLFFBQUFDLE9BQUEsT0FBQSxXQUNBTyxHQUFBQyxPQUFBLFNBQUFDLEdBRUFBLEVBQ0FDLEtBQUEsV0FDQUMsWUFBQSwrQkFFQUQsS0FBQSxnQkFDQUMsWUFBQSwrQkFFQUQsS0FBQSxTQUNBQyxZQUFBLG1CQUVBRCxLQUFBLFVBQ0FDLFlBQUEscUJBRUFELEtBQUEsYUFDQUMsWUFBQSwwQkFFQUQsS0FBQSxZQUNBQyxZQUFBLHlCQUdBQyxXQUNBQyxXQUFBIiwiZmlsZSI6ImFwcC5taW4uanMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIENyZWF0ZWQgYnkgaW1hbiBvbiA1LzEyLzE1LlxuICovXG4oZnVuY3Rpb24oKXtcblxuICAgIFwidXNlIHN0cmljdFwiO1xuXG4gICAgdmFyIG1hdGNoZXNTZXJ2aWNlID0gZnVuY3Rpb24gKCkge1xuXG4gICAgICAgIHZhciBnZXRNYXRjaGVzID0gZnVuY3Rpb24gKG5hbWVVc2VyKSB7XG5cbiAgICAgICAgICAgIHZhciBsb2NhbFVybCA9IFwiaHR0cDovL2xvY2FsaG9zdDo2MzM0Mi90b2dldGhlci9zcmMvZGF0YS9tYXRjaGVzLmpzb25cIjtcbiAgICAgICAgICAgIHZhciB4bWxIdHRwID0gbmV3IFhNTEh0dHBSZXF1ZXN0KCk7XG4gICAgICAgICAgICB4bWxIdHRwLm9wZW4oXCJHRVRcIiwgbG9jYWxVcmwsIGZhbHNlKTtcbiAgICAgICAgICAgIHhtbEh0dHAuc2VuZChudWxsKTtcblxuICAgICAgICAgICAgaWYoeG1sSHR0cC5zdGF0dXMgPT0gMjAwKSB7XG5cbiAgICAgICAgICAgICAgICB2YXIgZGF0YSA9IEpTT04ucGFyc2UoeG1sSHR0cC5yZXNwb25zZVRleHQpO1xuICAgICAgICAgICAgICAgIHZhciBhcnIgPSBbXTtcbiAgICAgICAgICAgICAgICB2YXIgYXJyTWF0Y2hlcyA9IFtdO1xuICAgICAgICAgICAgICAgIHZhciBhcnJNYXRjaFVzZXJzID0gW107XG4gICAgICAgICAgICAgICAgdmFyIGFyck1hdGNoSW50ZXJlc3RzID0gW107XG5cbiAgICAgICAgICAgICAgICBmb3IodmFyIGk9MDsgaSA8IGRhdGEubGVuZ3RoOyBpKyspe1xuXG4gICAgICAgICAgICAgICAgICAgIHZhciBvYmogPSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBcInVzZXJcIjogZGF0YVtpXS51c2VyLFxuICAgICAgICAgICAgICAgICAgICAgICAgXCJtYXRjaGVzXCI6ZGF0YVtpXS5tYXRjaGVzXG4gICAgICAgICAgICAgICAgICAgIH07XG5cbiAgICAgICAgICAgICAgICAgICAgYXJyLnB1c2gob2JqKTtcblxuICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgIGZvcih2YXIgaWkgPSAwOyBpaTxhcnIubGVuZ3RoOyBpaSsrKXtcblxuICAgICAgICAgICAgICAgICAgICB2YXIgaW5kZXggPSBhcnJbaWldLnVzZXIuaW5kZXhPZihuYW1lVXNlcik7XG4gICAgICAgICAgICAgICAgICAgIGlmKGluZGV4ID09PSAwKXtcbiAgICAgICAgICAgICAgICAgICAgICAgIGFyck1hdGNoZXMucHVzaChhcnJbaWldLm1hdGNoZXMpO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIC8vY29uc29sZS5sb2coXCJJbmRleDogXCIraW5kZXgpO1xuICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKGFycik7XG4gICAgICAgICAgICAgICAgY29uc29sZS5sb2coYXJyTWF0Y2hlc1swXSk7XG5cblxuICAgICAgICAgICAgICAgIHZhciBhcnJNYXRjaGVzQnlVc2VyID0gYXJyTWF0Y2hlc1swXTtcbiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhcIkFhbnRhbCBtYXRjaGVzOiBcIiArIGFyck1hdGNoZXNCeVVzZXIubGVuZ3RoKTtcblxuICAgICAgICAgICAgICAgIHJldHVybiBhcnJNYXRjaGVzQnlVc2VyO1xuXG4gICAgICAgICAgICAgICAgLypcbiAgICAgICAgICAgICAgICBmb3IodmFyIGlpaSA9IDA7IGlpaTxhcnJNYXRjaGVzWzBdLmxlbmd0aDsgaWlpKyspe1xuXG4gICAgICAgICAgICAgICAgICAgIHZhciBtYXRjaFVzZXIgPSBhcnJNYXRjaGVzWzBdW2lpaV0udXNlcjtcbiAgICAgICAgICAgICAgICAgICAgdmFyIG1hdGNoSW50ZXJlc3RzID0gYXJyTWF0Y2hlc1swXVtpaWldLmludGVyZXN0cztcblxuICAgICAgICAgICAgICAgICAgICBhcnJNYXRjaFVzZXJzLnB1c2gobWF0Y2hVc2VyKTtcbiAgICAgICAgICAgICAgICAgICAgYXJyTWF0Y2hJbnRlcmVzdHMucHVzaChtYXRjaEludGVyZXN0cyk7XG5cbiAgICAgICAgICAgICAgICAgICAgLy9jb25zb2xlLmxvZyhtYXRjaFVzZXIpO1xuICAgICAgICAgICAgICAgICAgICAvL2NvbnNvbGUubG9nKG1hdGNoSW50ZXJlc3RzKTtcbiAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhhcnJNYXRjaFVzZXJzKTtcbiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhhcnJNYXRjaEludGVyZXN0cyk7XG4gICAgICAgICAgICAgICAgKi9cblxuICAgICAgICAgICAgfVxuXG4gICAgICAgIH07XG5cbiAgICAgICAgLy9wdWJsaWMgZ2VkZWVsdGVcbiAgICAgICAgcmV0dXJue1xuXG4gICAgICAgICAgICBnZXRNYXRjaGVzOmdldE1hdGNoZXNcblxuICAgICAgICB9O1xuXG4gICAgfTtcblxuICAgIGFuZ3VsYXIubW9kdWxlKFwiYXBwXCIpLmZhY3RvcnkoXCJtYXRjaGVzU2VydmljZVwiLCBbbWF0Y2hlc1NlcnZpY2VdKTtcbiAgICAvLyAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBeIGRlemUgbmFhbSBiZXBhYWx0IHdlbGtlIG5hYW0gamUgbm9kaWcgaGVidCBpbiBqZSBjb250cm9sbGVyIGFscyB2ZXJ3aWp6aW5nIVxuXG59KSgpOyIsIi8qKlxuICogQ3JlYXRlZCBieSBpbWFuIG9uIDUvMTIvMTUuXG4gKi9cblxuKGZ1bmN0aW9uKCl7XG5cbiAgICBcInVzZSBzdHJpY3RcIjtcblxuICAgIHZhciBNYXRjaGVzQ29udHJvbGxlciA9IGZ1bmN0aW9uKCRzY29wZSwgbWF0Y2hlc1NlcnZpY2UpIHtcblxuICAgICAgICAkc2NvcGUuc2hvd01hdGNoZXMgPSBmdW5jdGlvbigpe1xuXG4gICAgICAgICAgICB2YXIgYXJyTWF0Y2hlc0J5VXNlciA9IG1hdGNoZXNTZXJ2aWNlLmdldE1hdGNoZXMoXCJMdW5hXCIpO1xuXG4gICAgICAgICAgICAkc2NvcGUuYWFudGFsTWF0Y2hlcyA9IGFyck1hdGNoZXNCeVVzZXIubGVuZ3RoO1xuXG4gICAgICAgICAgICAkc2NvcGUuYXJyTWF0Y2hlcyA9IGFyck1hdGNoZXNCeVVzZXI7XG5cbiAgICAgICAgfTtcbiAgICB9O1xuXG4gICAgYW5ndWxhci5tb2R1bGUoXCJhcHBcIikuY29udHJvbGxlcihcIk1hdGNoZXNDb250cm9sbGVyXCIsIFtcIiRzY29wZVwiLCBcIm1hdGNoZXNTZXJ2aWNlXCIsIE1hdGNoZXNDb250cm9sbGVyXSk7XG5cbn0pKCk7IiwiLyoqXG4gKiBDcmVhdGVkIGJ5IE1hcnRoZSBvbiAxLzEyLzE1LlxuICovXG4oZnVuY3Rpb24gKCkge1xuICAgIFwidXNlIHN0cmljdFwiO1xuXG4gICAgdmFyIGFwcCA9IGFuZ3VsYXIubW9kdWxlKFwiYXBwXCIsIFtcIm5nUm91dGVcIl0pO1xuICAgIGFwcC5jb25maWcoZnVuY3Rpb24gKCRyb3V0ZVByb3ZpZGVyKSB7XG4gICAgICAgIC8vYWxzIGRlIHBhZ2luYSBlaW5kaWd0IG9wIGFsbCBkYW4ge30gdWl0dm9lcmVuXG4gICAgICAgICRyb3V0ZVByb3ZpZGVyXG4gICAgICAgICAgICAud2hlbihcIi9zZWFyY2hcIiwge1xuICAgICAgICAgICAgICAgIHRlbXBsYXRlVXJsOiBcIkltYWdlc092ZXJ2aWV3L3NlYXJjaC5odG1sXCJcbiAgICAgICAgICAgIH0pXG4gICAgICAgICAgICAud2hlbihcIi9kZXRhaWxzLzppZFwiLCB7XG4gICAgICAgICAgICAgICAgdGVtcGxhdGVVcmw6IFwiSW1hZ2VzRGV0YWlscy9kZXRhaWxzLmh0bWxcIlxuICAgICAgICAgICAgfSlcbiAgICAgICAgICAgIC53aGVuKFwiL2hvbWVcIiwge1xuICAgICAgICAgICAgICAgIHRlbXBsYXRlVXJsOiBcImhvbWUvaG9tZS5odG1sXCJcbiAgICAgICAgICAgIH0pXG4gICAgICAgICAgICAud2hlbihcIi9ob3d0b1wiLCB7XG4gICAgICAgICAgICAgICAgdGVtcGxhdGVVcmw6IFwiaG93VG8vaG93VG8uaHRtbFwiXG4gICAgICAgICAgICB9KVxuICAgICAgICAgICAgLndoZW4oXCIvcmVnaXN0ZXJcIiwge1xuICAgICAgICAgICAgICAgIHRlbXBsYXRlVXJsOiBcInByb2ZpbGUvcmVnaXN0ZXIuaHRtbFwiXG4gICAgICAgICAgICB9KVxuICAgICAgICAgICAgLndoZW4oXCIvbWF0Y2hlc1wiLCB7XG4gICAgICAgICAgICAgICAgdGVtcGxhdGVVcmw6IFwibWF0Y2hlcy9tYXRjaGVzLmh0bWxcIlxuICAgICAgICAgICAgfSlcblxuICAgICAgICAgICAgLm90aGVyd2lzZSh7XG4gICAgICAgICAgICAgICAgcmVkaXJlY3RUbzogXCIvaG9tZVwiXG4gICAgICAgICAgICB9KTtcbiAgICB9KTtcblxufSkoKTsiXSwic291cmNlUm9vdCI6Ii9zb3VyY2UvIn0=
